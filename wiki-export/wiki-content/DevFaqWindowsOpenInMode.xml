<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

--><mediawiki xmlns="http://www.mediawiki.org/xml/export-0.3/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="0.3" xml:lang="en" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.3/ http://www.mediawiki.org/xml/export-0.3.xsd">
  <siteinfo>
    <sitename>NetBeans Wiki</sitename>
    <base>http://wiki.netbeans.org/Main_Page</base>
    <generator>MediaWiki 1.15.1</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2">Media</namespace>
      <namespace key="-1">Special</namespace>
      <namespace key="0"/>
      <namespace key="1">Talk</namespace>
      <namespace key="2">User</namespace>
      <namespace key="3">User talk</namespace>
      <namespace key="4">NetBeans Wiki</namespace>
      <namespace key="5">NetBeans Wiki talk</namespace>
      <namespace key="6">File</namespace>
      <namespace key="7">File talk</namespace>
      <namespace key="8">MediaWiki</namespace>
      <namespace key="9">MediaWiki talk</namespace>
      <namespace key="10">Template</namespace>
      <namespace key="11">Template talk</namespace>
      <namespace key="12">Help</namespace>
      <namespace key="13">Help talk</namespace>
      <namespace key="14">Category</namespace>
      <namespace key="15">Category talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>DevFaqWindowsOpenInMode</title>
    <id>7523</id>
    <revision>
      <id>26307</id>
      <timestamp>2009-11-06T16:06:12Z</timestamp>
      <contributor>
        <username>Admin</username>
        <id>1</id>
      </contributor>
      <text xml:space="preserve">__NOTOC__
===My TopComponent always opens in the editor area, but I want it to open in the same place as XYZ?===

By default, &lt;tt&gt;TopComponent.open()&lt;/tt&gt; opens all components in the central editor area of the
main window.  Overriding this is simple:

&lt;pre&gt;
public MyTopComponent extends TopComponent {
  public void open() {
     Mode m = WindowManager.getDefault().findMode ("output");
     if (m != null) {
        m.dockInto(this);
     }
     super.open();
  }
}
&lt;/pre&gt;

You need to know the ID of the [[DevFaqWindowsMode| Mode ]] you want to put the component in.  Common IDs are "output" for the bottom of the screen, and "explorer" for the left side.  For other Modes, you may need to find a module that puts something there and read its layer files, or [[DevFaqFilesystemSee| browse]] the [[DevFaqSystemFilesystem| System Filesystem]].

Eventually you will probably want to specify what mode to dock your component into using the [[DevFaqWindowsXmlApi| XML API for installing components]], but the above technique works for simple modules, testing, etc.</text>
    </revision>
  </page>
</mediawiki>

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

--><mediawiki xmlns="http://www.mediawiki.org/xml/export-0.3/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="0.3" xml:lang="en" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.3/ http://www.mediawiki.org/xml/export-0.3.xsd">
  <siteinfo>
    <sitename>NetBeans Wiki</sitename>
    <base>http://wiki.netbeans.org/Main_Page</base>
    <generator>MediaWiki 1.15.1</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2">Media</namespace>
      <namespace key="-1">Special</namespace>
      <namespace key="0"/>
      <namespace key="1">Talk</namespace>
      <namespace key="2">User</namespace>
      <namespace key="3">User talk</namespace>
      <namespace key="4">NetBeans Wiki</namespace>
      <namespace key="5">NetBeans Wiki talk</namespace>
      <namespace key="6">File</namespace>
      <namespace key="7">File talk</namespace>
      <namespace key="8">MediaWiki</namespace>
      <namespace key="9">MediaWiki talk</namespace>
      <namespace key="10">Template</namespace>
      <namespace key="11">Template talk</namespace>
      <namespace key="12">Help</namespace>
      <namespace key="13">Help talk</namespace>
      <namespace key="14">Category</namespace>
      <namespace key="15">Category talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>DevFaqExecutableIcon</title>
    <id>7258</id>
    <revision>
      <id>68030</id>
      <timestamp>2015-04-28T11:14:08Z</timestamp>
      <contributor>
        <username>Jmborer</username>
        <id>90</id>
      </contributor>
      <text xml:space="preserve">__NOTOC__
===How can I change the executable's icon?===

In short, the current NetBeans IDE (6.7) only provides limited support for changing application icons. Alternate solutions are described below, but NetBeans itself does not include any way to change the icon of the Windows launcher executable called &lt;tt&gt;&lt;your branding name&gt;.exe&lt;/tt&gt;, nor does it provide a way to specify an &lt;tt&gt;.icns&lt;/tt&gt; file for Mac OS X. There is already an enhancement request for Windows icon support: [http://www.netbeans.org/nonav/issues/show_bug.cgi?id=64612 issue #64612].

===='Application Icon' Images====
NetBeans only provides GUI support for choosing a 48x48 GIF or PNG image, within the Project Properties dialog on the Build screen. Using this screen produces two files within your project's &lt;tt&gt;branding/core/core.jar/org/netbeans/core/startup&lt;/tt&gt; folder: &lt;tt&gt;frame.gif&lt;/tt&gt; and &lt;tt&gt;frame48.gif&lt;/tt&gt;. However, these files are crudely resized from the selected image. For this reason, and because a 32x32 icon is not generated, it is best to create the image files for the three icon sizes yourself using another editor, and then simply place them into the startup folder mentioned above.

Similar to toolbar icons, these files always use the &lt;tt&gt;.gif&lt;/tt&gt; extension, regardless of their actual format. The &lt;tt&gt;frame.gif&lt;/tt&gt; file is used for the smallest icon size of 16x16, which shows up in three places: the taskbar (Windows/Linux), in the upper-left corner of the application's title bar (Windows/Linux), and in the upper-left corner of most dialog windows (Windows/Linux). Another file called &lt;tt&gt;frame32.gif&lt;/tt&gt; (which is not generated by the NetBeans Project Properties dialog) provides a 32x32 icon that shows up in the Alt-Tab menu on Windows. Lastly, the &lt;tt&gt;frame48.gif&lt;/tt&gt; file provides a 48x48 icon that shows up in the Alt-Tab menu on Linux.

====Windows Icons====
This refers to the icon of the Windows launcher executable as seen in Windows Explorer or when you make a shortcut to it on your Windows desktop. The Windows executable is found within &lt;tt&gt;&lt;your project&gt;\build\launcher\bin\&lt;/tt&gt; and is an identical copy of &lt;tt&gt;&lt;NetBeans install location&gt;\harness\launchers\app.exe&lt;/tt&gt; that has simply been renamed to the branding name that you have specified within the Project Properties dialog on the Build screen (which is actually saved as the &lt;tt&gt;app.name&lt;/tt&gt; property in &lt;tt&gt;project.properties&lt;/tt&gt;). Although the NetBeans IDE can't change this icon, you can use a third-party utility program to replace the exe's icon with an &lt;tt&gt;.ico&lt;/tt&gt; of your own.

If you want a simple commandline program to call as part of your Windows build process, the free &lt;tt&gt;ReplaceVistaIcon.exe&lt;/tt&gt; from [http://www.rw-designer.com/compile-vista-icon  RealWorld Graphics] works well, and can be invoked as simply as:
&lt;pre&gt;ReplaceVistaIcon.exe build\launcher\bin\&lt;your branding name&gt;.exe YourIconFile.ico&lt;/pre&gt;

To do this automatically when building, simply place a copy of &lt;tt&gt;ReplaceVistaIcon.exe&lt;/tt&gt; and &lt;tt&gt;&lt;your branding name&gt;.ico&lt;/tt&gt; into your project's root directory (where &lt;tt&gt;build.xml&lt;/tt&gt; is), and add the following to your suite's Build Script (&lt;tt&gt;build.xml&lt;/tt&gt;) after the import line:
&lt;pre&gt;
	&lt;condition property="isWindows"&gt;
		&lt;os family="windows" /&gt;
	&lt;/condition&gt;

	&lt;target name="build-launchers" depends="suite.build-launchers"&gt;
		&lt;!-- Replace the icon for the Windows launcher exe. --&gt;
		&lt;antcall target="replaceWindowsLauncherIcon"/&gt;
	&lt;/target&gt;

	&lt;!-- Windows-only target that replaces the icon for the launcher exe with our own icon. --&gt;
	&lt;target name="replaceWindowsLauncherIcon" if="isWindows" description="Replace the icon for the Windows launcher exe"&gt;
		&lt;echo message="Replacing icon of Windows launcher executable."/&gt;
		&lt;exec executable="ReplaceVistaIcon.exe" resolveexecutable="true"&gt;
			&lt;arg line="build/launcher/bin/${app.name}.exe ${app.name}.ico"/&gt;
		&lt;/exec&gt;
	&lt;/target&gt;
&lt;/pre&gt;

If you would prefer to simply do it manually and need a GUI resource editor, try the free programs:
* http://www.angusj.com/resourcehacker
* http://www.wilsonc.demon.co.uk/d10resourceeditor.htm

If you need an editor for creating/converting both Windows &lt;tt&gt;.ico&lt;/tt&gt; files and Mac &lt;tt&gt;.icns&lt;/tt&gt; files, try the excellent, program [http://icofx.ro/ IcoFX] (no longer free). 

====Mac Icons====
The "Build Mac OS X Application" command in NetBeans uses a default icon from &lt;tt&gt;&lt;NetBeans install location&gt;/harness/etc/applicationIcon.icns&lt;/tt&gt;.
You can change this icon after a Mac build by simply replacing the file &lt;tt&gt;&lt;your project&gt;/dist/&lt;your branding name&gt;.app/Contents/Resources/&lt;your branding name&gt;.icns&lt;/tt&gt; with your own &lt;tt&gt;.icns&lt;/tt&gt; file of the same name.

In order to replace it automatically when building, name your &lt;tt&gt;.icns&lt;/tt&gt; file as &lt;tt&gt;&lt;your branding name&gt;.icns&lt;/tt&gt; and place a copy into your project's root directory (where &lt;tt&gt;build.xml&lt;/tt&gt; is), and add the following to your suite's Build Script (&lt;tt&gt;build.xml&lt;/tt&gt;) after the import line:
&lt;pre&gt;
	&lt;!-- Override to change Mac application icon. --&gt;
	&lt;target name="build-mac" depends="suite.build-mac" description="Build Mac OS X Application"&gt;
		&lt;property name="nbdist-contents.dir" value="${dist.dir}/${app.name}.app/Contents"/&gt;
		&lt;property name="nbdist-resources.dir" value="${nbdist-contents.dir}/Resources"/&gt;

		&lt;!-- Replace the icns file. --&gt;
		&lt;delete file="${nbdist-resources.dir}/${app.name}.icns"/&gt;
		&lt;copy tofile="${nbdist-resources.dir}/${app.name}.icns" file="${app.name}.icns" /&gt;
	&lt;/target&gt;
&lt;/pre&gt;

This is a simplified version of Tonny Kohar's (of http://www.kiyut.com) build script posted on: http://forums.netbeans.org/ptopic10504.html

Since Netbeans 6.9 ([http://netbeans.org/bugzilla/show_bug.cgi?id=182230+&amp;x=23&amp;y=2 Issue #182230]) is possible to specify the Mac dock icon just by setting the property &lt;tt&gt;app.icon.icns in&lt;/tt&gt; your &lt;tt&gt;build.xml&lt;/tt&gt;

&lt;pre&gt;
   &lt;import file="nbproject/build-impl.xml"/&gt;
   &lt;property name="app.icon.icns" value="${basedir}/myappicon.icns"/&gt;
&lt;/pre&gt;
====Related links====
* https://blogs.oracle.com/geertjan/entry/icons_for_netbeans_platform_applications</text>
    </revision>
  </page>
</mediawiki>

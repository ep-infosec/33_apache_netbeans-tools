<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

--><mediawiki xmlns="http://www.mediawiki.org/xml/export-0.3/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="0.3" xml:lang="en" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.3/ http://www.mediawiki.org/xml/export-0.3.xsd">
  <siteinfo>
    <sitename>NetBeans Wiki</sitename>
    <base>http://wiki.netbeans.org/Main_Page</base>
    <generator>MediaWiki 1.15.1</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2">Media</namespace>
      <namespace key="-1">Special</namespace>
      <namespace key="0"/>
      <namespace key="1">Talk</namespace>
      <namespace key="2">User</namespace>
      <namespace key="3">User talk</namespace>
      <namespace key="4">NetBeans Wiki</namespace>
      <namespace key="5">NetBeans Wiki talk</namespace>
      <namespace key="6">File</namespace>
      <namespace key="7">File talk</namespace>
      <namespace key="8">MediaWiki</namespace>
      <namespace key="9">MediaWiki talk</namespace>
      <namespace key="10">Template</namespace>
      <namespace key="11">Template talk</namespace>
      <namespace key="12">Help</namespace>
      <namespace key="13">Help talk</namespace>
      <namespace key="14">Category</namespace>
      <namespace key="15">Category talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>DevFaqWindowsTopComponent</title>
    <id>7525</id>
    <revision>
      <id>34528</id>
      <timestamp>2010-02-25T16:18:58Z</timestamp>
      <contributor>
        <username>Tboudreau</username>
        <id>108</id>
      </contributor>
      <comment>/* What is a TopComponent in the Window System? */</comment>
      <text xml:space="preserve">__NOTOC__
===What is a TopComponent in the Window System?===

[http://bits.netbeans.org/dev/javadoc/org-openide-windows/org/openide/windows/TopComponent.html &lt;tt&gt;org.openide.windows.TopComponent&lt;/tt&gt;] is a &lt;tt&gt;JComponent&lt;/tt&gt; subclass which knows how to work with
the NetBeans window system.  If you want to add components to the main window, typically you will subclass TopComponent, using it the same way you would a &lt;tt&gt;JPanel&lt;/tt&gt;.

TopComponents live inside [[DevFaqWindowsMode| Mode]]s - docking containers.

TopComponents can have various states:
* '''open/closed''' - When a TopComponent is ''open'', a tab exists somewhere in the main window or UI for it
* '''visible/invisible''' - When a TopComponent is ''visible'', it is the selected tab in its [[DevFaqWindowsMode| Mode]]
* '''active/inactive''' - When a TopComponent is ''active'', it or a child component of it has keyboard focus, and it is currently the global [[DevFaqTrackGlobalSelection| selection context]]

Each &lt;tt&gt;TopComponent&lt;/tt&gt; has a &lt;tt&gt;[[DevFaqLookup| Lookup]]&lt;/tt&gt; and one or more &lt;tt&gt;[[DevFaqWhatIsANode| activated Node]]&lt;/tt&gt;s.  These define the [[DevFaqTrackGlobalSelection| selection context]] for the window system, which determines what actions (menu items, toolbar buttons, etc.) are enabled, and in some cases, what they will do or operate on if invoked.

&lt;tt&gt;TopComponent&lt;/tt&gt;s are part of the [http://bits.netbeans.org/dev/javadoc/org-openide-windows/org/openide/windows/doc-files/api.html Windows API].

TopComponents that were already open may be deserialized and reopened on restart.  The template that NetBeans 5.0 provides includes code for this - it is actually using saved using the Externalizable interface.  Whether or not it is saved is determined by what you return from &lt;tt&gt;getPersistenceType()&lt;/tt&gt;.

For information on how and when these are reconstructed on startup, see the [[DevFaqWindowsInternals| gory details of the window system on startup]].</text>
    </revision>
  </page>
</mediawiki>

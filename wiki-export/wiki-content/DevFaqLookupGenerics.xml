<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

--><mediawiki xmlns="http://www.mediawiki.org/xml/export-0.3/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="0.3" xml:lang="en" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.3/ http://www.mediawiki.org/xml/export-0.3.xsd">
  <siteinfo>
    <sitename>NetBeans Wiki</sitename>
    <base>http://wiki.netbeans.org/Main_Page</base>
    <generator>MediaWiki 1.15.1</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2">Media</namespace>
      <namespace key="-1">Special</namespace>
      <namespace key="0"/>
      <namespace key="1">Talk</namespace>
      <namespace key="2">User</namespace>
      <namespace key="3">User talk</namespace>
      <namespace key="4">NetBeans Wiki</namespace>
      <namespace key="5">NetBeans Wiki talk</namespace>
      <namespace key="6">File</namespace>
      <namespace key="7">File talk</namespace>
      <namespace key="8">MediaWiki</namespace>
      <namespace key="9">MediaWiki talk</namespace>
      <namespace key="10">Template</namespace>
      <namespace key="11">Template talk</namespace>
      <namespace key="12">Help</namespace>
      <namespace key="13">Help talk</namespace>
      <namespace key="14">Category</namespace>
      <namespace key="15">Category talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>DevFaqLookupGenerics</title>
    <id>7376</id>
    <revision>
      <id>34294</id>
      <timestamp>2010-02-19T00:29:05Z</timestamp>
      <contributor>
        <username>Tboudreau</username>
        <id>108</id>
      </contributor>
      <text xml:space="preserve">__NOTOC__
===How do I use Java Generics with Lookup?===

As of NetBeans 6, a number of convenience methods have been added to lookup, and support for Java generics has been added to Lookup.  The following are differences (assume that &lt;code&gt;lkp&lt;/code&gt; is a [[DevFaqLookup| &lt;tt&gt;Lookup&lt;/tt&gt;]]):

{| border=1 class="simple" cellpadding="20" cellspacing="0" style="background-color:#FFF9EF;"
! NB 5.x Code 
! NB 6 Code
|-
| &lt;tt&gt;DataObject dob = (DataObject) lkp.lookup(DataObject.class)&lt;/tt&gt;
| &lt;tt&gt;DataObject dob = lkp.lookup(DataObject.class)&lt;/tt&gt;
|- 
| &lt;tt&gt;Lookup.Result r = lkp.lookup(new Lookup.Template(X.class))&lt;/tt&gt;
| &lt;tt&gt;Lookup.Result&lt;? extends X&gt; r = lkp.lookupResult(X.class)&lt;/tt&gt;
|-
|&lt;tt&gt;Collection c = r.allInstances()&lt;/tt&gt;
|&lt;tt&gt;Collection&lt;? extends X&gt; c = r.allInstances()&lt;/tt&gt;
|-
| &lt;tt&gt;Lookup.Template t = new Lookup.Template(X.class);
Lookup.Result r = lkp.lookup(t);&lt;br/&gt;
Collection c = r.allInstances();&lt;/tt&gt;
| &lt;tt&gt;Collection&lt;? extends X&gt; c = lkp.lookupAll(X.class);&lt;/tt&gt;
|-
|&lt;tt&gt;Lookup.Template t = new Lookup.Template(X.class);&lt;br/&gt;
Lookup.Result r = lkp.lookup(t);&lt;br/&gt;
Collection c = r.allInstances(); &lt;br/&gt;&lt;/tt&gt;
&lt;tt&gt;for (Iterator it=c.iterator(); it.hasNext();) {
&amp;nbsp;&amp;nbsp;X x = (X) it.next();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;//do something with x&lt;br/&gt;
}&lt;/tt&gt;
|&lt;tt&gt;for (X x : lkp.lookupAll(X.class)) {
&amp;nbsp;&amp;nbsp;//do something with x&lt;br/&gt;
}&lt;/tt&gt;
|}
&lt;br/&gt;
Generics work well with JDK-5-style for-loops:

&lt;pre&gt;
for (SomeService s : Lookup.getDefault().lookupAll(SomeService.class)) {
    // ...
}
&lt;/pre&gt;</text>
    </revision>
  </page>
</mediawiki>

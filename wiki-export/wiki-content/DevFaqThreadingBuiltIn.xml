<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

--><mediawiki xmlns="http://www.mediawiki.org/xml/export-0.3/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="0.3" xml:lang="en" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.3/ http://www.mediawiki.org/xml/export-0.3.xsd">
  <siteinfo>
    <sitename>NetBeans Wiki</sitename>
    <base>http://wiki.netbeans.org/Main_Page</base>
    <generator>MediaWiki 1.15.1</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2">Media</namespace>
      <namespace key="-1">Special</namespace>
      <namespace key="0"/>
      <namespace key="1">Talk</namespace>
      <namespace key="2">User</namespace>
      <namespace key="3">User talk</namespace>
      <namespace key="4">NetBeans Wiki</namespace>
      <namespace key="5">NetBeans Wiki talk</namespace>
      <namespace key="6">File</namespace>
      <namespace key="7">File talk</namespace>
      <namespace key="8">MediaWiki</namespace>
      <namespace key="9">MediaWiki talk</namespace>
      <namespace key="10">Template</namespace>
      <namespace key="11">Template talk</namespace>
      <namespace key="12">Help</namespace>
      <namespace key="13">Help talk</namespace>
      <namespace key="14">Category</namespace>
      <namespace key="15">Category talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>DevFaqThreadingBuiltIn</title>
    <id>7483</id>
    <revision>
      <id>29868</id>
      <timestamp>2009-12-03T15:38:48Z</timestamp>
      <contributor>
        <username>Dsimonek</username>
        <id>745</id>
      </contributor>
      <text xml:space="preserve">__NOTOC__
===What APIs come with built-in background thread handling===

A few APIs come with built in multi-threading - if you want your code to run on a background thread, you don't have to do any special set up to do that.

Specifically they are
* The Actions API - if you override &lt;tt&gt;asynchronous&lt;/tt&gt; to return true (or don't override it - for historical reasons this is the default), your action's &lt;tt&gt;performAction&lt;/tt&gt; method will run in the background
* The Nodes API - to compute node children that are expensive to create, use &lt;tt&gt;[http://wiki.netbeans.org/DevFaqNodesChildFactory ChildFactory]&lt;/tt&gt; and specify &lt;tt&gt;true&lt;/tt&gt; as the boolean argument to &lt;tt&gt;[http://bits.netbeans.org/dev/javadoc/org-openide-nodes/org/openide/nodes/Children.html#create(org.openide.nodes.ChildFactory,%20boolean) Children.create()]&lt;/tt&gt;
* Various parsing APIs - for syntax highlighting languages and so forth - usually you just provide a task to do, and it will automatically call you in the background when a reparse is being done
* QuickSearch API - searchers are typically called in background thread by infrastructure in  [http://bits.netbeans.org/dev/javadoc/org-netbeans-spi-quicksearch/org/netbeans/spi/quicksearch/SearchProvider.html#evaluate%28org.netbeans.spi.quicksearch.SearchRequest,%20org.netbeans.spi.quicksearch.SearchResponse%29 SearchProvider.evaluate(...)]</text>
    </revision>
  </page>
</mediawiki>

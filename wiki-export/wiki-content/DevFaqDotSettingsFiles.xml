<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

--><mediawiki xmlns="http://www.mediawiki.org/xml/export-0.3/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="0.3" xml:lang="en" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.3/ http://www.mediawiki.org/xml/export-0.3.xsd">
  <siteinfo>
    <sitename>NetBeans Wiki</sitename>
    <base>http://wiki.netbeans.org/Main_Page</base>
    <generator>MediaWiki 1.15.1</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2">Media</namespace>
      <namespace key="-1">Special</namespace>
      <namespace key="0"/>
      <namespace key="1">Talk</namespace>
      <namespace key="2">User</namespace>
      <namespace key="3">User talk</namespace>
      <namespace key="4">NetBeans Wiki</namespace>
      <namespace key="5">NetBeans Wiki talk</namespace>
      <namespace key="6">File</namespace>
      <namespace key="7">File talk</namespace>
      <namespace key="8">MediaWiki</namespace>
      <namespace key="9">MediaWiki talk</namespace>
      <namespace key="10">Template</namespace>
      <namespace key="11">Template talk</namespace>
      <namespace key="12">Help</namespace>
      <namespace key="13">Help talk</namespace>
      <namespace key="14">Category</namespace>
      <namespace key="15">Category talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>DevFaqDotSettingsFiles</title>
    <id>7246</id>
    <revision>
      <id>39129</id>
      <timestamp>2010-06-14T21:40:32Z</timestamp>
      <contributor>
        <username>Jglick</username>
        <id>628</id>
      </contributor>
      <comment>/* Example */</comment>
      <text xml:space="preserve">__NOTOC__
===What are .settings files?===

&lt;tt&gt;.settings&lt;/tt&gt; files are similar to [[DevFaqInstanceDataObject| &lt;tt&gt;.instance&lt;/tt&gt; files]],
with the difference that they are XML format, and can contain serialized data rather than just default instances.

Since the introduction of [http://bits.netbeans.org/dev/javadoc/org-openide-util/org/openide/util/NbPreferences.html &lt;tt&gt;NbPreferences&lt;/tt&gt;] to replace [http://bits.netbeans.org/dev/javadoc/org-openide-options/org/openide/options/SystemOption.html &lt;tt&gt;SystemOption&lt;/tt&gt;],
very little new code uses these files, and they should be considered semi-deprecated.  They are difficult and error-prone to use, and have a fair amount of overhead.  The Window System still requires them to be used to persist the state of opened windows/tabs (caret position, what file is opened, or other state that should be restored when reopening a [http://bits.netbeans.org/dev/javadoc/org-openide-windows/org/openide/windows/TopComponent.html &lt;tt&gt;TopComponent&lt;/tt&gt;] after a restart) across application runs.

A &lt;tt&gt;.settings&lt;/tt&gt; file can encode the entire parent class and interface hierarchy of the object it represents, so that a query about ''whether an object of a given type is present'' (such as using &lt;code&gt;[http://bits.netbeans.org/dev/javadoc/org-openide-util-lookup/org/openide/util/lookup/Lookups.html#forPath(java.lang.String) Lookups.forPath](&amp;quot;path/to/folder&amp;quot;).allItems()&lt;/code&gt;) can be answered without actually creating an instance of the object.  

Settings files are also useful if you are declaring some objects in a layer file (see [[DevFaqModulesLayerFile]]) ''and intend to write them back out to disk after they have been modified in-memory'' (note this involves writing ugly and inefficient hexadecimal-encoded serialized data into XML files - if the object is a singleton, using &lt;code&gt;[http://bits.netbeans.org/dev/javadoc/org-openide-util/org/openide/util/NbPreferences.html NbPreferences]&lt;/code&gt; will be both more efficient and more readable).

====Example====

 &lt;?xml version="1.0"?&gt;
 &lt;!DOCTYPE settings PUBLIC "-//NetBeans//DTD Session settings 1.0//EN"
                           "http://www.netbeans.org/dtds/sessionsettings-1_0.dtd"&gt;
 &lt;settings version="1.0"&gt;
     &lt;module name="org.netbeans.core.io.ui/1" spec="1.6"/&gt;
     &lt;instanceof class="org.openide.windows.TopComponent"/&gt;
     &lt;instanceof class="org.netbeans.core.io.ui.IOWindow$IOWindowImpl"/&gt;
     &lt;serialdata class="org.netbeans.core.io.ui.IOWindow$IOWindowImpl"&gt;
         ACED0005737200296F72672E6F70656E6964652E7...
     &lt;/serialdata&gt;
 &lt;/settings&gt;</text>
    </revision>
  </page>
</mediawiki>

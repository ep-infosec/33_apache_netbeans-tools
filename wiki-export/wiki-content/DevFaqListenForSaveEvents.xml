<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

--><mediawiki xmlns="http://www.mediawiki.org/xml/export-0.3/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="0.3" xml:lang="en" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.3/ http://www.mediawiki.org/xml/export-0.3.xsd">
  <siteinfo>
    <sitename>NetBeans Wiki</sitename>
    <base>http://wiki.netbeans.org/Main_Page</base>
    <generator>MediaWiki 1.15.1</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2">Media</namespace>
      <namespace key="-1">Special</namespace>
      <namespace key="0"/>
      <namespace key="1">Talk</namespace>
      <namespace key="2">User</namespace>
      <namespace key="3">User talk</namespace>
      <namespace key="4">NetBeans Wiki</namespace>
      <namespace key="5">NetBeans Wiki talk</namespace>
      <namespace key="6">File</namespace>
      <namespace key="7">File talk</namespace>
      <namespace key="8">MediaWiki</namespace>
      <namespace key="9">MediaWiki talk</namespace>
      <namespace key="10">Template</namespace>
      <namespace key="11">Template talk</namespace>
      <namespace key="12">Help</namespace>
      <namespace key="13">Help talk</namespace>
      <namespace key="14">Category</namespace>
      <namespace key="15">Category talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>DevFaqListenForSaveEvents</title>
    <id>7369</id>
    <revision>
      <id>40164</id>
      <timestamp>2010-07-24T19:50:39Z</timestamp>
      <contributor>
        <username>Jtulach</username>
        <id>526</id>
      </contributor>
      <text xml:space="preserve">__NOTOC__
===How can I be notified when a file is modified and saved??===

The [http://bits.netbeans.org/dev/javadoc/org-openide-loaders/org/openide/loaders/DataObject.Registry.html DataObject.Registry] in [http://bits.netbeans.org/dev/javadoc/org-openide-loaders LoadersAPI] gives you a set of modified DataObjects. You can also add a listener and be notified when the set of modified objects changes.

If you have a FileObject and want to listen for save events, you will need to get its DataObject by calling &lt;tt&gt;[http://bits.netbeans.org/dev/javadoc/org-openide-loaders/org/openide/loaders/DataObject.html#find(org.openide.filesystems.FileObject) DataObject.find()]&lt;/tt&gt;.

To listen on a single DataObject for save events, simply add a &lt;code&gt;PropertyChangeListener&lt;/code&gt; and listen for changes in &lt;code&gt;DataObject.PROP_MODIFIED&lt;/code&gt;.

Note that listening for something to be saved is ''not the same as listening for any changes in the file'' - you are really listening only for (directly or indirectly) user-initiated save events, as in the user pressing CTRL-S when the file is modified and opened in the editor.  For notifications about any changes in a file, instead attach a &lt;tt&gt;[[DevFaqListenForChangesInNonExistentFile|FileChangeListener]]&lt;/tt&gt; to the underlying &lt;tt&gt;[[DevFaqFileObject|FileObject]]&lt;/tt&gt;.

==Track the currently modified files by DataObject Registry listening - Sample code==
&lt;source lang="java"&gt;
DataObject.Registry registries = DataObject.getRegistry();
registries.addChangeListener(new ChangeListener() {
    public void stateChanged(ChangeEvent e) {
        System.out.println("ChangedListener: o = " + e.getSource().getClass());
        System.out.println("ChangedListener: o.source = " + e.getSource());
    }
});
DataObject[] objects = registries.getModified();
for (int i = 0; i &lt; objects.length; i++) {
    DataObject dataObj = objects[I];
    System.out.println("data object name = " + dataObj.getName());
    System.out.println("data object pimary file name = " + dataObj.getPrimaryFile().getName());
    Set fss = dataObj.files();
    Iterator iter = fss.iterator();
    while (iter.hasNext()) {
        FileObject fo = (FileObject) iter.next();
        System.out.println("\tset file object: " + fo.getName());
    }
}
&lt;/source&gt;

==Libraries needed==
* Datasystems API
* File System API
* Nodes API
* Utilities API</text>
    </revision>
  </page>
</mediawiki>

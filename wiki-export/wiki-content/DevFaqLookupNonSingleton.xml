<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

--><mediawiki xmlns="http://www.mediawiki.org/xml/export-0.3/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="0.3" xml:lang="en" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.3/ http://www.mediawiki.org/xml/export-0.3.xsd">
  <siteinfo>
    <sitename>NetBeans Wiki</sitename>
    <base>http://wiki.netbeans.org/Main_Page</base>
    <generator>MediaWiki 1.15.1</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2">Media</namespace>
      <namespace key="-1">Special</namespace>
      <namespace key="0"/>
      <namespace key="1">Talk</namespace>
      <namespace key="2">User</namespace>
      <namespace key="3">User talk</namespace>
      <namespace key="4">NetBeans Wiki</namespace>
      <namespace key="5">NetBeans Wiki talk</namespace>
      <namespace key="6">File</namespace>
      <namespace key="7">File talk</namespace>
      <namespace key="8">MediaWiki</namespace>
      <namespace key="9">MediaWiki talk</namespace>
      <namespace key="10">Template</namespace>
      <namespace key="11">Template talk</namespace>
      <namespace key="12">Help</namespace>
      <namespace key="13">Help talk</namespace>
      <namespace key="14">Category</namespace>
      <namespace key="15">Category talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>DevFaqLookupNonSingleton</title>
    <id>7380</id>
    <revision>
      <id>34301</id>
      <timestamp>2010-02-19T00:39:45Z</timestamp>
      <contributor>
        <username>Tboudreau</username>
        <id>108</id>
      </contributor>
      <comment>/* If there is more than one of a type in a Lookup, which instance will I get? */</comment>
      <text xml:space="preserve">__NOTOC__
===If there is more than one of a type in a Lookup, which instance will I get?===

As noted in [[DevFaqLookup| the overview of Lookup]], a Lookup can contain more than one instance of a given class;  Lookup is often used for singletons, but not exclusively for singletons.  For example, in the [http://www.netbeans.org/download/dev/javadoc/ProjectAPI/overview-summary.html Projects API], there is a class called [http://www.netbeans.org/download/dev/javadoc/ProjectAPI/org/netbeans/spi/project/ProjectFactory.html ProjectFactory] that recognizes different types of user projects on disk;  each module that provides a project type registers another factory in the system.

So the inevitable question is, if there are two instances of X in a Lookup, and I call &lt;tt&gt;lookup(X.class)&lt;/tt&gt;, which one do I get?

The answer is, it's undefined - don't do that.  The next inevitable question is, but how can that be?

A Lookup makes no assumptions about what's in it, or what you might want to put in it, or how many of anything there should be.  That contract is an agreement between whoever tells you that you should get an instance of X from some Lookup and you.  If they document that there will only be one, use &lt;tt&gt;Lookup.lookup(Class)&lt;/tt&gt;.  If they document that there can be more than one, use &lt;tt&gt;Lookup.lookupAll(Class)&lt;/tt&gt; and iterate the results.

In practice this is a non-problem - anything you are going to try to find in a &lt;tt&gt;Lookup&lt;/tt&gt; is going to document whether it is supposed to be a singleton or not.</text>
    </revision>
  </page>
</mediawiki>

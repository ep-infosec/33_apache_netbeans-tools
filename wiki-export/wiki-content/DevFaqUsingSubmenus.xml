<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

--><mediawiki xmlns="http://www.mediawiki.org/xml/export-0.3/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="0.3" xml:lang="en" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.3/ http://www.mediawiki.org/xml/export-0.3.xsd">
  <siteinfo>
    <sitename>NetBeans Wiki</sitename>
    <base>http://wiki.netbeans.org/Main_Page</base>
    <generator>MediaWiki 1.15.1</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2">Media</namespace>
      <namespace key="-1">Special</namespace>
      <namespace key="0"/>
      <namespace key="1">Talk</namespace>
      <namespace key="2">User</namespace>
      <namespace key="3">User talk</namespace>
      <namespace key="4">NetBeans Wiki</namespace>
      <namespace key="5">NetBeans Wiki talk</namespace>
      <namespace key="6">File</namespace>
      <namespace key="7">File talk</namespace>
      <namespace key="8">MediaWiki</namespace>
      <namespace key="9">MediaWiki talk</namespace>
      <namespace key="10">Template</namespace>
      <namespace key="11">Template talk</namespace>
      <namespace key="12">Help</namespace>
      <namespace key="13">Help talk</namespace>
      <namespace key="14">Category</namespace>
      <namespace key="15">Category talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>DevFaqUsingSubmenus</title>
    <id>7507</id>
    <revision>
      <id>26291</id>
      <timestamp>2009-11-06T16:04:48Z</timestamp>
      <contributor>
        <username>Admin</username>
        <id>1</id>
      </contributor>
      <text xml:space="preserve">__NOTOC__
===Can I add submenus to context or main menus, instead of single menu items?===

Yes, any place where the APIs expect to have an item
installed into a context or main menu, you can provide a submenu
instead.

Provide a dummy &lt;tt&gt;Action&lt;/tt&gt; (it can be a do-nothing subclass of &lt;tt&gt;javax.swing.AbstractAction&lt;/tt&gt;), or in some cases the class need not even be an &lt;tt&gt;Action&lt;/tt&gt; at all. For context menus, implement the interface &lt;tt&gt;[http://www.netbeans.org/download/dev/javadoc/org-openide-util/org/openide/util/actions/Presenter.Popup.html Presenter.Popup]&lt;/tt&gt; on your &lt;tt&gt;Action&lt;/tt&gt;, and have it return a &lt;tt&gt;JMenu&lt;/tt&gt; from &lt;tt&gt;getPopupPresenter()&lt;/tt&gt;.

Similarly, you can implement other subinterfaces of &lt;tt&gt;[http://www.netbeans.org/download/dev/javadoc/org-openide-util/org/openide/util/actions/Presenter.html Presenter]&lt;/tt&gt; to provide a different component to display in toolbars or the main menu.

'''Note about using alternate components in the main menu:''' If you want your action to work properly on Mac OS, you probably don't want to return anything other than a &lt;tt&gt;JMenu&lt;/tt&gt; or &lt;tt&gt;JMenuItem&lt;/tt&gt; from &lt;tt&gt;getMenuPresenter()&lt;/tt&gt; if you implement [http://www.netbeans.org/download/dev/javadoc/org-openide-util/org/openide/util/actions/Presenter.Menu.html Presenter.Menu].  In general, Swing allows you to treat menu popups as generic Swing containers you can put what you like into.  This is not true at all of the Mac OS screen menu bar - it expects normal menu items, and will not handle unusual contents for menus.

If you just return a &lt;tt&gt;JMenu&lt;/tt&gt; from &lt;tt&gt;getPopupPresenter&lt;/tt&gt; or &lt;tt&gt;getMenuPresenter&lt;/tt&gt; it will always be displayed, though you can conditionally disable it. If you wish to sometimes hide (not just disable) the submenu, make it implement [http://www.netbeans.org/download/dev/javadoc/org-openide-awt/org/openide/awt/DynamicMenuContent.html DynamicMenuContent] and you can make the submenu appear or disappear whenever you like (or even provide more than one menu item / submenu).</text>
    </revision>
  </page>
</mediawiki>

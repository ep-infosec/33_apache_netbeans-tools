<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

--><mediawiki xmlns="http://www.mediawiki.org/xml/export-0.3/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="0.3" xml:lang="en" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.3/ http://www.mediawiki.org/xml/export-0.3.xsd">
  <siteinfo>
    <sitename>NetBeans Wiki</sitename>
    <base>http://wiki.netbeans.org/Main_Page</base>
    <generator>MediaWiki 1.15.1</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2">Media</namespace>
      <namespace key="-1">Special</namespace>
      <namespace key="0"/>
      <namespace key="1">Talk</namespace>
      <namespace key="2">User</namespace>
      <namespace key="3">User talk</namespace>
      <namespace key="4">NetBeans Wiki</namespace>
      <namespace key="5">NetBeans Wiki talk</namespace>
      <namespace key="6">File</namespace>
      <namespace key="7">File talk</namespace>
      <namespace key="8">MediaWiki</namespace>
      <namespace key="9">MediaWiki talk</namespace>
      <namespace key="10">Template</namespace>
      <namespace key="11">Template talk</namespace>
      <namespace key="12">Help</namespace>
      <namespace key="13">Help talk</namespace>
      <namespace key="14">Category</namespace>
      <namespace key="15">Category talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>DevFaqDotShadowFiles</title>
    <id>7247</id>
    <revision>
      <id>39131</id>
      <timestamp>2010-06-14T21:42:08Z</timestamp>
      <contributor>
        <username>Jglick</username>
        <id>628</id>
      </contributor>
      <text xml:space="preserve">__NOTOC__
===What are &lt;tt&gt;*.shadow&lt;/tt&gt; files?===

&lt;tt&gt;*.shadow&lt;/tt&gt; files are mainly used in the [[DevFaqSystemFilesystem|system filesystem]]
for configuration data.
They are the functional equivalent of Unix symbolic links -
a &lt;tt&gt;*.shadow&lt;/tt&gt; file is a pointer to another file whose
behavior in every respect except its path and file name is the same as the original.

&lt;tt&gt;*.shadow&lt;/tt&gt; files are commonly used where only a single instance of an object is needed,
but it must be registered in multiple folders.
For example, a general &lt;tt&gt;Action&lt;/tt&gt; is declared in the &lt;tt&gt;Actions/&lt;/tt&gt; folder of the
system filesystem.
But the action also needs to appear in menus and toolbars, possibly other places.
So, rather than create multiple instances of an action, one [[DevFaqInstanceDataObject|&lt;tt&gt;*.instance&lt;/tt&gt; file]]
is created in the [[DevFaqModulesLayerFile|module's layer file]], in the &lt;tt&gt;Actions/&lt;/tt&gt; folder.
Then &lt;tt&gt;*.shadow&lt;/tt&gt; files are created in all of the other places the &lt;tt&gt;*.instance&lt;/tt&gt; file would be needed,
pointing to the original file.

Declaring a .shadow file in the system filesystem looks like this:
 &lt;folder name="A"&gt;
   &lt;file name="com-foo-mymodule-MyClass.instance"/&gt;
 &lt;/folder&gt;
 &lt;folder name="B"&gt;
   &lt;file name="Shadow1.shadow"&gt;
     &lt;attr name="originalFile" stringvalue="A/com-foo-mymodule- MyClass.instance"/&gt;
   &lt;/file&gt;
 &lt;/folder&gt;
 &lt;folder name="C"&gt;
   &lt;file name="anotherShadow.shadow"&gt;
     &lt;attr name="originalFile" stringvalue="A/com-foo-mymodule-MyClass.instance"/&gt;
   &lt;/file&gt;
 &lt;/folder&gt;

Shadow files can also point to real files on disk.
For example, the Favorites tab in the NetBeans IDE
uses shadow files to link to real directories on disk.

=====Creating Shadow Files Programmatically=====

If you need to create &lt;code&gt;.shadow&lt;/code&gt; files programmatically, use [http://bits.netbeans.org/dev/javadoc/org-openide-loaders/org/openide/loaders/DataShadow.html#create(org.openide.loaders.DataFolder,%20java.lang.String,%20org.openide.loaders.DataObject) &lt;tt&gt;DataShadow.create()&lt;/tt&gt;] &amp;mdash; do not write &lt;tt&gt;FileObject&lt;/tt&gt;s and try to set attributes on them.  In an XML layer, a &lt;tt&gt;DataShadow&lt;/tt&gt;'s original file is pointed to by a file attribute.  On disk, that is accomplished via the ''file's content'' instead.  To reliably create &lt;tt&gt;DataShadow&lt;/tt&gt;s, let the infrastructure do it for you - do not make assumptions about how the original file is pointed to.</text>
    </revision>
  </page>
</mediawiki>

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

--><mediawiki xmlns="http://www.mediawiki.org/xml/export-0.3/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="0.3" xml:lang="en" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.3/ http://www.mediawiki.org/xml/export-0.3.xsd">
  <siteinfo>
    <sitename>NetBeans Wiki</sitename>
    <base>http://wiki.netbeans.org/Main_Page</base>
    <generator>MediaWiki 1.15.1</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2">Media</namespace>
      <namespace key="-1">Special</namespace>
      <namespace key="0"/>
      <namespace key="1">Talk</namespace>
      <namespace key="2">User</namespace>
      <namespace key="3">User talk</namespace>
      <namespace key="4">NetBeans Wiki</namespace>
      <namespace key="5">NetBeans Wiki talk</namespace>
      <namespace key="6">File</namespace>
      <namespace key="7">File talk</namespace>
      <namespace key="8">MediaWiki</namespace>
      <namespace key="9">MediaWiki talk</namespace>
      <namespace key="10">Template</namespace>
      <namespace key="11">Template talk</namespace>
      <namespace key="12">Help</namespace>
      <namespace key="13">Help talk</namespace>
      <namespace key="14">Category</namespace>
      <namespace key="15">Category talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>DevFaqScanForClasses</title>
    <id>7457</id>
    <revision>
      <id>50423</id>
      <timestamp>2011-12-15T08:29:15Z</timestamp>
      <contributor>
        <username>Jlahoda</username>
        <id>59</id>
      </contributor>
      <minor/>
      <comment>/* Finding all subtypes of given type */</comment>
      <text xml:space="preserve">__NOTOC__
===How can I scan a classpath to find all classes of a particular type?===

====Prerequisites====

* find the ClassPath on which the subtypes should be found. Use e.g. ClassPath.getClassPath(&lt;file&gt;, ClassPath.SOURCE)
* if the supertype is given as a FQN, convert to ElementHandle&lt;TypeElement&gt; via ElementHandle.create inside a Task or CancellableTask.

====Finding all subtypes of given type====

All subtypes of a given type on a given ClassPath can be found using ClassIndex. As ClassIndex contains only direct subtypes, the indirect subtypes need to be found on the client side:

&lt;pre&gt;
private Set&lt;ElementHandle&lt;TypeElement&gt;&gt; findAllSubTypes(ClassPath on, ElementHandle&lt;TypeElement&gt; of) {
    ClasspathInfo cpInfo = ClasspathInfo.create(ClassPath.EMPTY, ClassPath.EMPTY, on);
    
    List&lt;ElementHandle&lt;TypeElement&gt;&gt; todo = new LinkedList&lt;ElementHandle&lt;TypeElement&gt;&gt;(of);
    Set&lt;ElementHandle&lt;TypeElement&gt;&gt; result = new HashSet&lt;ElementHandle&lt;TypeElement&gt;&gt;();

    while (!todo.isEmpty()) {
        //TODO: if cancellable, check for cancel here
                
        ElementHandle&lt;TypeElement&gt; curr = todo.remove(0);

        result.add(curr);

        Set&lt;ElementHandle&lt;TypeElement&gt;&gt; typeElements = cpInfo.getClassIndex().getElements(eh, EnumSet.of(ClassIndex.SearchKind.IMPLEMENTORS), EnumSet.of(ClassIndex.SearchScope.SOURCE));

        if (typeElements != null) { //can be null for cancellable tasks
            todo.addAll(typeElements);
        }
    }

    return result;
}
&lt;/pre&gt;

====Getting FileObjects corresponding to ElementHandles====

The FileObject corresponding to a given ElementHandle&lt;TypeElement&gt; can be found using SourceUtils.getFile.</text>
    </revision>
  </page>
</mediawiki>

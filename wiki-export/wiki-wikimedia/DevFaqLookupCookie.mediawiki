<!--

    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->

===What is the difference between getCookie(Class), SharedClassObject.get(Class) and Lookup.lookup(Class)?===

All of these are really historical variations on the same theme.  In all cases, you pass a <tt>Class</tt> object and get back null or an instance of that class.  You can see the progression in genericness:

<tt>SharedClassObject</tt> is the oldest version of the Lookup pattern in NetBeans APIs, dating to circa 1997 (because of various performance issues, eventually all usages of <tt>SharedClassObject</tt> should be deprecated and removed from the APIs).  You'll see that form used in <tt>SystemOption</tt> for storing settings, and most of the singleton Action objects in the actions API.  All objects returned by it will be instances of <tt>SharedClassObject</tt>.

<tt>getCookie()</tt> (circa 1999) is specific to [[DevFaqWhatIsANode| Node]]s and [[DevFaqDataObject| DataObject]]s.  It uses the same pattern, but all objects returned by it will implement the empty <tt>Node.Cookie</tt> marker interface.

The down-side to both of the above is that they specify the return type.  In the case of <tt>Node.Cookie</tt>, in practice, this meant that anything that might possibly need to be provided by a <tt>DataObject</tt> or <tt>Node</tt> needed to implement this silly marker interface, forcing it to have a dependency on the Nodes API, or a wrapper Cookie class had to be created to provide the underlying object, which just added useless classes and noise.

[[DevFaqLookup| Lookup]] is the most modern and generic version of this pattern, and probably the final one.  It offers two advantages:
# Its return type is <tt>java.lang.Object</tt>, so it can be used directly with anything
# Having objects ''own'' a lookup rather than directly providing a <tt>lookup(Class c)</tt> method makes it easier to replace or proxy the Lookup of some object

===Apache Migration Information===

The content in this page was kindly donated by Oracle Corp. to the
Apache Software Foundation.

This page was exported from http://wiki.netbeans.org/DevFaqLookupCookie , 
that was last modified by NetBeans user Admin 
on 2009-11-06T15:51:49Z.

